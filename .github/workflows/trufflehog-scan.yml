name: TruffleHog Secret Detection

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  scan-secrets:
    name: Scan for Secrets with TruffleHog
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comprehensive scanning

    - name: Run TruffleHog OSS
      id: trufflehog
      uses: trufflesecurity/trufflehog@main
      continue-on-error: true
      with:
        path: ./
        extra_args: --debug --only-verified --json

    - name: Create Security Report
      if: always()
      run: |
        echo "# TruffleHog Security Scan Report" > security-report.md
        echo "" >> security-report.md
        echo "**Repository:** ${{ github.repository }}" >> security-report.md
        echo "**Branch:** ${{ github.ref_name }}" >> security-report.md
        echo "**Commit:** ${{ github.sha }}" >> security-report.md
        echo "**Scan Date:** $(date -u)" >> security-report.md
        echo "" >> security-report.md
        
        if [ "${{ steps.trufflehog.outcome }}" = "failure" ]; then
          echo "üî¥ **SECRETS DETECTED** - Review required!" >> security-report.md
          echo "" >> security-report.md
          echo "Potential secrets were found in the repository. Please review the findings and:" >> security-report.md
          echo "1. Remove any confirmed secrets immediately" >> security-report.md
          echo "2. Rotate any exposed credentials" >> security-report.md
          echo "3. Update applications using the rotated credentials" >> security-report.md
          echo "4. Consider using secret management solutions" >> security-report.md
        else
          echo "‚úÖ **No verified secrets detected**" >> security-report.md
          echo "" >> security-report.md
          echo "The scan completed successfully with no verified secrets found." >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "## Security Best Practices" >> security-report.md
        echo "- Use Kubernetes Secrets for sensitive data" >> security-report.md
        echo "- Implement HashiCorp Vault or similar for secret management" >> security-report.md
        echo "- Use .gitignore to prevent accidental commits of sensitive files" >> security-report.md
        echo "- Enable branch protection rules requiring status checks" >> security-report.md
        echo "- Regular security audits and dependency scanning" >> security-report.md

    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportContent = fs.readFileSync('security-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: reportContent
          });

    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trufflehog-security-report
        path: security-report.md
        retention-days: 30

    - name: Fail if Secrets Found
      if: steps.trufflehog.outcome == 'failure'
      run: |
        echo "‚ùå TruffleHog detected potential secrets in the repository!"
        echo "Please review the scan results and remove any confirmed secrets."
        echo "After cleanup, rotate any exposed credentials and update applications."
        exit 1