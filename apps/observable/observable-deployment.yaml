apiVersion: apps/v1
kind: Deployment
metadata:
  name: observable
  namespace: observable
spec:
  replicas: 1
  selector:
    matchLabels:
      app: observable
      component: dashboard
  template:
    metadata:
      labels:
        app: observable
        component: dashboard
    spec:
      containers:
      - name: observable
        image: node:20-alpine
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "🚀 Setting up Observable Framework..."
          npm install -g @observablehq/framework@latest
          
          mkdir -p /app/src/data
          cd /app
          
          # Copy dashboard files from mounted volume
          cp -r /dashboard-src/* /app/src/ 2>/dev/null || echo "No dashboard files to copy"
          
          # Create sample data files if they don't exist
          test -f src/data/quickwit-logs.json || echo '[]' > src/data/quickwit-logs.json
          test -f src/data/loki-logs.json || echo '[]' > src/data/loki-logs.json  
          test -f src/data/metrics.json || echo '{}' > src/data/metrics.json
          
          npm init -y
          npm install @observablehq/framework
          
          # Create Observable config
          cat > observablehq.config.js << 'EOF'
          export default {
            title: "🔍 Observability Dashboard",
            pages: [
              {name: "🏠 Home", path: "/"},
              {name: "🛡️ Security", path: "/security"},
              {name: "⚙️ Operations", path: "/operations"}
            ],
            toc: {
              show: true
            }
          };
          EOF
          
          echo "📊 Starting Observable Framework..."
          exec npx @observablehq/framework preview --host 0.0.0.0 --port 3000
        ports:
        - containerPort: 3000
        env:
        - name: OBSERVABLE_TELEMETRY_DISABLE
          value: "true"
        - name: LOKI_ENDPOINT
          value: "http://192.168.122.27:3100"
        - name: QUICKWIT_ENDPOINT
          value: "http://192.168.122.27:7280"
        - name: PROMETHEUS_ENDPOINT
          value: "http://192.168.122.27:9090"
        volumeMounts:
        - name: dashboard-files
          mountPath: /dashboard-src
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: dashboard-files
        configMap:
          name: observable-dashboards