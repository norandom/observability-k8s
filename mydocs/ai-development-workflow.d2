# AI Development Workflow

direction: down

# Style configuration
vars: {
  d2-config: {
    theme-id: 1
    layout-engine: elk
  }
}

# Clean Apple Keynote styling
classes: {
  primary: {
    style.fill: "#007AFF"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  secondary: {
    style.fill: "#5856D6" 
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  accent: {
    style.fill: "#FF3B30"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  success: {
    style.fill: "#34C759"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  warning: {
    style.fill: "#FF9500"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  container: {
    style.fill: "#F2F2F7"
    style.font-color: "#000000"
    style.border-radius: 12
    style.font-size: 16
    style.bold: true
  }
  note: {
    style.fill: "#FFFFFF"
    style.font-color: "#6C6C70"
    style.border-radius: 6
    style.font-size: 12
    style.stroke: "#E5E5EA"
  }
}

# Local development environment
local: {
  label: "Local Development"
  class: container
  
  ai_tools: {
    label: "AI Tools"
    class: secondary
    
    claude: {
      label: "Claude Code"
      class: secondary
    }
    
    gemini: {
      label: "Gemini CLI"
      class: secondary
    }
  }
  
  filesystem: {
    label: "Local Files"
    class: success
  }
  
  editor: {
    label: "VS Code / IDE"
    class: primary
  }
}

# Telepresence bridge
bridge: {
  label: "Telepresence Bridge"
  class: container
  
  intercept: {
    label: "Traffic\nIntercept"
    class: warning
  }
  
  mount: {
    label: "File System\nMount"
    class: warning
  }
}

# Kubernetes environment
kubernetes: {
  label: "Kubernetes Cluster"
  class: container
  
  observable_pod: {
    label: "Observable\nFramework Pod"
    class: primary
  }
  
  hot_reload: {
    label: "Hot Reload"
    class: success
  }
  
  apis: {
    label: "Cluster APIs"
    class: note
  }
}

# Live dashboard
dashboard: {
  label: "Live Dashboard"
  class: container
  
  interface: {
    label: "Web Interface"
    class: primary
  }
  
  data: {
    label: "Real-time Data"
    class: success
  }
}

# Development flow
local.ai_tools.claude -> local.filesystem: "AI Code Gen" {
  style.stroke: "#5856D6"
  style.stroke-width: 2
  style.font-size: 12
}

local.ai_tools.gemini -> local.filesystem: "AI Assistance" {
  style.stroke: "#5856D6"
  style.stroke-width: 2
  style.font-size: 12
}

local.filesystem -> bridge.mount: "File Changes" {
  style.stroke: "#34C759"
  style.stroke-width: 3
  style.font-size: 12
}

bridge.mount -> kubernetes.observable_pod: "Live Sync" {
  style.stroke: "#FF9500"
  style.stroke-width: 3
  style.font-size: 12
}

kubernetes.hot_reload -> dashboard.interface: "Auto Refresh" {
  style.stroke: "#007AFF"
  style.stroke-width: 3
  style.font-size: 12
}

# API access
bridge.intercept -> kubernetes.apis: "Local API Access" {
  style.stroke: "#FF9500"
  style.stroke-width: 2
  style.stroke-dash: 3
  style.font-size: 12
}

kubernetes.apis -> dashboard.data: "Live Data" {
  style.stroke: "#34C759"
  style.stroke-width: 2
  style.font-size: 12
}

# Benefits section
benefits: {
  label: "Development Benefits"
  class: container
  
  instant: {
    label: "Instant\nFeedback"
    class: success
  }
  
  ai_integration: {
    label: "AI\nIntegration"
    class: secondary
  }
  
  live_data: {
    label: "Live Data\nAccess"
    class: primary
  }
  
  local_tools: {
    label: "Local IDE\nCapabilities"
    class: warning
  }
}