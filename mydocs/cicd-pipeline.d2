# CI/CD Pipeline - Step-by-Step Workflow

direction: down

vars: {
  d2-config: {
    layout-engine: elk
  }
}

# Apple Keynote styling consistent with other diagrams
classes: {
  step: {
    style.fill: "#F8F9FA"
    style.font-color: "#1D1D1F" 
    style.border-radius: 16
    style.font-size: 24
    style.bold: true
    style.stroke: "#D1D1D6"
    style.stroke-width: 2
    style.shadow: true
  }
  action: {
    style.fill: "#007AFF"
    style.font-color: "#FFFFFF"
    style.border-radius: 12
    style.font-size: 20
    style.bold: true
    style.shadow: true
  }
  trigger: {
    style.fill: "#FF9500"
    style.font-color: "#FFFFFF" 
    style.border-radius: 12
    style.font-size: 20
    style.bold: true
    style.shadow: true
  }
  security: {
    style.fill: "#FF3B30"
    style.font-color: "#FFFFFF"
    style.border-radius: 12
    style.font-size: 20
    style.bold: true
    style.shadow: true
  }
  success: {
    style.fill: "#34C759"
    style.font-color: "#FFFFFF"
    style.border-radius: 12
    style.font-size: 20
    style.bold: true
    style.shadow: true
  }
  deploy: {
    style.fill: "#5856D6"
    style.font-color: "#FFFFFF"
    style.border-radius: 12
    style.font-size: 20
    style.bold: true
    style.shadow: true
  }
}

# Step 1: Developer Actions
step1: "Step 1: Developer Actions" {
  class: step
  
  git_push: {
    shape: circle
    label: "🚀\nGit Push"
    class: trigger
  }
  
  pr_create: {
    shape: circle
    label: "🔄\nPull Request"
    class: trigger
  }
  
  diagram_change: {
    shape: circle
    label: "📊\nDiagram Edit"
    class: trigger
  }
}

# Step 2: GitHub Actions Pipeline
step2: "Step 2: GitHub Actions Pipeline" {
  class: step
  
  security_scan: {
    shape: hexagon
    label: "🔒\nSecurity Scan"
    class: security
    
    trufflehog: "TruffleHog\nSecrets" {
      style.font-size: 16
    }
    trivy: "Trivy\nK8s Security" {
      style.font-size: 16
    }
  }
  
  diagram_build: {
    shape: hexagon
    label: "🎨\nD2 Build"
    class: action
    
    install: "Install D2" {
      style.font-size: 16
    }
    generate: "Generate PNG/SVG" {
      style.font-size: 16
    }
  }
  
  ssh_commit: {
    shape: hexagon
    label: "🔑\nSSH Commit"
    class: success
    
    sign: "Sign with SSH" {
      style.font-size: 16
    }
    push: "Auto-push" {
      style.font-size: 16
    }
  }
}

# Step 3: Security Integration
step3: "Step 3: Security Integration" {
  class: step
  
  sarif_upload: {
    shape: cylinder
    label: "📋\nSARIF Upload"
    class: security
  }
  
  github_security: {
    shape: cloud
    label: "🛡️\nGitHub Security Tab"
    class: success
  }
  
  artifacts: {
    shape: package
    label: "📦\nArtifacts\n(30 days)"
    class: action
  }
}

# Step 4: Kubernetes Pipeline
step4: "Step 4: Kubernetes Pipeline" {
  class: step
  
  git_poller: {
    shape: diamond
    label: "⏰\nGit Poller\n(2min CronJob)"
    class: trigger
  }
  
  change_detection: {
    shape: diamond
    label: "🔍\nChange Detection"
    class: action
    
    infrastructure: "Core Dependencies\n(.yml, Dockerfile)" {
      style.font-size: 14
      style.font-color: "#FF9500"
    }
    dashboards: "Dashboard Files\n(.md)" {
      style.font-size: 14
      style.font-color: "#34C759"
    }
  }
}

# Step 5: Build & Deploy
step5: "Step 5: Build & Deploy" {
  class: step
  
  tekton_build: {
    shape: hexagon
    label: "🔨\nTekton Build"
    class: action
    
    kaniko: "Kaniko Build" {
      style.font-size: 16
    }
    registry: "Push to Registry" {
      style.font-size: 16
    }
  }
  
  argocd_sync: {
    shape: hexagon
    label: "🔄\nArgoCD Sync"
    class: deploy
    
    manifest_sync: "Manifest Sync" {
      style.font-size: 16
    }
    dashboard_sync: "Dashboard Sync\n(No Rebuild)" {
      style.font-size: 14
      style.font-color: "#34C759"
    }
  }
}

# Step 6: Live Applications
step6: "Step 6: Live Applications" {
  class: step
  
  observable: {
    shape: circle
    label: "📊\nObservable\nFramework"
    class: success
  }
  
  grafana: {
    shape: circle
    label: "📈\nGrafana\nDashboards"
    class: success
  }
  
  monitoring: {
    shape: circle
    label: "📝\nLoki + Quickwit\nMonitoring"
    class: success
  }
}

# Development Workflow Arrows
step1.git_push -> step2.security_scan: "All pushes" {
  style.stroke: "#FF3B30"
  style.stroke-width: 3
  style.font-size: 14
}

step1.pr_create -> step2.security_scan: "PR validation" {
  style.stroke: "#FF3B30"
  style.stroke-width: 3
  style.font-size: 14
}

step1.diagram_change -> step2.diagram_build: "mydocs/**" {
  style.stroke: "#007AFF"
  style.stroke-width: 3
  style.font-size: 14
}

# GitHub Actions Flow
step2.security_scan -> step3.sarif_upload: "Results" {
  style.stroke: "#FF3B30"
  style.stroke-width: 2
  style.font-size: 14
}

step2.diagram_build -> step2.ssh_commit: "Generated files" {
  style.stroke: "#007AFF"
  style.stroke-width: 2
  style.font-size: 14
}

step2.ssh_commit -> step3.artifacts: "Build artifacts" {
  style.stroke: "#34C759"
  style.stroke-width: 2
  style.font-size: 14
}

step3.sarif_upload -> step3.github_security: "Security findings" {
  style.stroke: "#FF3B30"
  style.stroke-width: 2
  style.font-size: 14
}

# Kubernetes Flow
step1.git_push -> step4.git_poller: "Repository changes" {
  style.stroke: "#FF9500"
  style.stroke-width: 3
  style.font-size: 14
}

step4.git_poller -> step4.change_detection: "Check commits" {
  style.stroke: "#007AFF"
  style.stroke-width: 2
  style.font-size: 14
}

step4.change_detection -> step5.tekton_build: "Infrastructure\nchanges only" {
  style.stroke: "#FF9500"
  style.stroke-width: 3
  style.font-size: 14
}

step4.change_detection -> step5.argocd_sync: "All changes" {
  style.stroke: "#5856D6"
  style.stroke-width: 3
  style.font-size: 14
}

# Deploy to Applications
step5.tekton_build -> step6.observable: "Container update" {
  style.stroke: "#007AFF"
  style.stroke-width: 2
  style.font-size: 14
}

step5.argocd_sync -> step6.observable: "Live sync" {
  style.stroke: "#34C759"
  style.stroke-width: 3
  style.font-size: 14
}

step5.argocd_sync -> step6.grafana: "GitOps deploy" {
  style.stroke: "#5856D6"
  style.stroke-width: 2
  style.font-size: 14
}

step5.argocd_sync -> step6.monitoring: "Stack deploy" {
  style.stroke: "#5856D6"
  style.stroke-width: 2
  style.font-size: 14
}

# Legend - Key Features
legend: "Key Features" {
  style.fill: "#F5F5F7"
  style.stroke: "#D1D1D6"
  style.stroke-width: 1
  style.border-radius: 16
  style.font-size: 18
  style.shadow: true
  
  smart_build: "🧠 Smart Build Detection" {
    style.font-size: 16
    style.font-color: "#FF9500"
    style.bold: true
  }
  
  live_sync: "⚡ Live Dashboard Sync" {
    style.font-size: 16
    style.font-color: "#34C759"
    style.bold: true
  }
  
  security: "🔒 Automated Security" {
    style.font-size: 16
    style.font-color: "#FF3B30"
    style.bold: true
  }
  
  gitops: "🔄 GitOps Deployment" {
    style.font-size: 16
    style.font-color: "#5856D6"
    style.bold: true
  }
  
  details: |md
    • **Infrastructure changes** trigger full container rebuild
    • **Dashboard changes** sync instantly without rebuild
    • **Security scans** upload to GitHub Security tab
    • **SSH-signed commits** from GitHub Actions
    • **2-minute polling** for responsive updates
  | {style: {font-size: 14}}
}