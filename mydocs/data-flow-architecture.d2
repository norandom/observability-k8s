# Data Flow Architecture

direction: right

# Style configuration
vars: {
  d2-config: {
    theme-id: 1
    layout-engine: elk
  }
}

# Apple Keynote style classes
classes: {
  primary: {
    style.fill: "#007AFF"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  secondary: {
    style.fill: "#5856D6" 
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  accent: {
    style.fill: "#FF3B30"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  success: {
    style.fill: "#34C759"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  warning: {
    style.fill: "#FF9500"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  container: {
    style.fill: "#F2F2F7"
    style.font-color: "#000000"
    style.border-radius: 12
    style.font-size: 16
    style.bold: true
  }
  note: {
    style.fill: "#FFFFFF"
    style.font-color: "#6C6C70"
    style.border-radius: 6
    style.font-size: 12
    style.stroke: "#E5E5EA"
  }
}

# Main flow components
apis: {
  label: "Log APIs"
  class: container
  
  loki: {
    label: "Loki API\nOperational"
    class: success
  }
  
  quickwit: {
    label: "Quickwit API\nSecurity"
    class: accent
  }
}

python: {
  label: "Python Processing"
  class: container
  
  loader: {
    label: "Data Loaders"
    class: warning
  }
  
  processing: {
    label: "Extract\nAggregate\nAnalyze"
    class: note
  }
}

json_layer: {
  label: "Data Layer"
  class: container
  
  files: {
    label: "JSON Files"
    class: secondary
  }
  
  data: {
    label: "loki-logs.json\nquickwit-logs.json"
    class: note
  }
}

observable: {
  label: "Observable Framework"
  class: container
  
  js: {
    label: "JavaScript\nVisualization"
    class: primary
  }
  
  features: {
    label: "Observable Plot\nInteractive Charts"
    class: note
  }
}

browser: {
  label: "Dashboard"
  class: container
  
  ui: {
    label: "User Interface"
    class: primary
  }
  
  display: {
    label: "Real-time\nInteractive"
    class: note
  }
}

# Development tools
dev: {
  label: "Development"
  class: container
  
  telepresence: {
    label: "Telepresence"
    class: primary
  }
  
  ai: {
    label: "AI Tools"
    class: secondary
  }
}

# Data flow connections
apis.loki -> python.loader: "1. HTTP API" {
  style.stroke: "#34C759"
  style.stroke-width: 3
  style.font-size: 12
}

apis.quickwit -> python.loader: "1. HTTP API" {
  style.stroke: "#FF3B30"
  style.stroke-width: 3
  style.font-size: 12
}

python.loader -> json_layer.files: "2. Structured Data" {
  style.stroke: "#FF9500"
  style.stroke-width: 3
  style.font-size: 12
}

json_layer.files -> observable.js: "3. FileAttachment" {
  style.stroke: "#5856D6"
  style.stroke-width: 3
  style.font-size: 12
}

observable.js -> browser.ui: "4. Rendered" {
  style.stroke: "#007AFF"
  style.stroke-width: 3
  style.font-size: 12
}

# Development flow
dev.ai -> dev.telepresence: {style.stroke: "#5856D6"; style.stroke-width: 2}
dev.telepresence -> observable: "Live Sync" {
  style.stroke: "#007AFF"
  style.stroke-width: 2
  style.stroke-dash: 3
  style.font-size: 12
}