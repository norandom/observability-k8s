# System Architecture - Observable Framework Stack
# Apple Keynote style optimization with automated signed builds âœ…

direction: down

# Style configuration - Apple Keynote inspired
vars: {
  d2-config: {
    theme-id: 1
    layout-engine: elk
  }
}

# Clean, modern style classes
classes: {
  primary: {
    style.fill: "#007AFF"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  secondary: {
    style.fill: "#5856D6" 
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  accent: {
    style.fill: "#FF3B30"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  success: {
    style.fill: "#34C759"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  warning: {
    style.fill: "#FF9500"
    style.font-color: "#FFFFFF"
    style.border-radius: 8
    style.font-size: 14
  }
  container: {
    style.fill: "#F2F2F7"
    style.font-color: "#000000"
    style.border-radius: 12
    style.font-size: 16
    style.bold: true
  }
}

# Main containers
data_sources: {
  label: "Data Sources"
  class: container
  
  fluent_bit: {
    label: "Fluent Bit\nDaemonSet"
    class: primary
  }
  
  logs: {
    label: "Application\nSystem\nAudit\nK8s Logs"
    class: secondary
  }
}

processing: {
  label: "Log Processing"
  class: container
  
  otel: {
    label: "OpenTelemetry\nCollector"
    class: warning
  }
}

storage: {
  label: "Storage Systems"
  class: container
  
  loki: {
    label: "Loki\nOperational\n6GB/7 days"
    class: success
  }
  
  quickwit: {
    label: "Quickwit\nSecurity\n6GB/auto"
    class: accent
  }
}

analysis: {
  label: "Analysis Layer"
  class: container
  
  grafana: {
    label: "Grafana"
    class: success
  }
  
  quickwit_ui: {
    label: "Quickwit UI"
    class: accent
  }
  
  observable: {
    label: "Observable\nFramework"
    class: primary
  }
}

python: {
  label: "Data Processing"
  class: container
  
  loaders: {
    label: "Python\nData Loaders"
    class: warning
  }
  
  json: {
    label: "JSON\nData Files"
    class: secondary
  }
}

dashboards: {
  label: "Dashboards"
  class: container
  
  main: {
    label: "Main"
    class: primary
  }
  
  ops: {
    label: "Operations"
    class: success
  }
  
  sec: {
    label: "Security"
    class: accent
  }
}

gitops: {
  label: "GitOps"
  class: container
  
  argocd: {
    label: "ArgoCD"
    class: warning
  }
  
  git: {
    label: "Git Repo"
    class: secondary
  }
}

development: {
  label: "Development"
  class: container
  
  telepresence: {
    label: "Telepresence"
    class: primary
  }
  
  ai_tools: {
    label: "AI Tools\nClaude/Gemini"
    class: secondary
  }
}

# Connections with clean styling
data_sources.fluent_bit -> processing.otel: {style.stroke: "#8E8E93"; style.stroke-width: 2}
data_sources.logs -> data_sources.fluent_bit: {style.stroke: "#8E8E93"; style.stroke-width: 2}

processing.otel -> storage.loki: {style.stroke: "#34C759"; style.stroke-width: 3}
processing.otel -> storage.quickwit: {style.stroke: "#FF3B30"; style.stroke-width: 3}

storage.loki -> analysis.grafana: {style.stroke: "#34C759"; style.stroke-width: 2}
storage.loki -> python.loaders: {style.stroke: "#34C759"; style.stroke-width: 2}
storage.quickwit -> analysis.quickwit_ui: {style.stroke: "#FF3B30"; style.stroke-width: 2}
storage.quickwit -> python.loaders: {style.stroke: "#FF3B30"; style.stroke-width: 2}

python.loaders -> python.json: {style.stroke: "#FF9500"; style.stroke-width: 2}
python.json -> analysis.observable: {style.stroke: "#007AFF"; style.stroke-width: 2}

analysis.observable -> dashboards.main: {style.stroke: "#007AFF"; style.stroke-width: 2}
analysis.observable -> dashboards.ops: {style.stroke: "#34C759"; style.stroke-width: 2}
analysis.observable -> dashboards.sec: {style.stroke: "#FF3B30"; style.stroke-width: 2}

gitops.git -> gitops.argocd: {style.stroke: "#FF9500"; style.stroke-width: 2}
gitops.argocd -> storage: {style.stroke: "#C7C7CC"; style.stroke-width: 2; style.stroke-dash: 3}
gitops.argocd -> analysis: {style.stroke: "#C7C7CC"; style.stroke-width: 2; style.stroke-dash: 3}

development.telepresence -> analysis.observable: {style.stroke: "#007AFF"; style.stroke-width: 3}
development.ai_tools -> development.telepresence: {style.stroke: "#5856D6"; style.stroke-width: 2}